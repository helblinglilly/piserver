name: Main
on:
  pull_request:
    branches:
      - main
jobs:
  # test:
  #   name: Testing
  #   runs-on: self-hosted
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #     - name: Use node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 18
  #     - name: Install dependencies
  #       run: npm ci --development
  #     - name: Move env file
  #       run: cp /home/joel/env ./.env
  #     - name: Run tests
  #       run: npm run test

  docker:
    name: Push Docker Image
    runs-on: ARM64
    # needs: test
    if: github.event_name == 'pull_request'
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set current date as env variable
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date

      - name: Build docker image
        run: docker build -t helblingjoel/piserver:${{ steps.date.outputs.date }} .

      - name: Push docker image
        run: docker push helblingjoel/piserver:${{ steps.date.outputs.date }}

  restart:
    needs: docker
    name: Redeploy
    runs-on: raspberry
    if: github.event_name == 'pull_request'
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set current date as env variable
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
        id: date
      - name: Stop running container
        run: docker stop dashboard || true && docker rm dashboard || true
      - name: Remove existing image
        run: docker image rm helblingjoel/piserver:${{steps.date.outputs.date }} ||
          true
      - name: Start container
        run: docker run -p 80:8080 -d --name dashboard --restart unless-stopped -e
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} helblingjoel/piserver:${{
          steps.date.outputs.date }}
